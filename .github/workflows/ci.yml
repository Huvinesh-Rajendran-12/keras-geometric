name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
        backend: ['tensorflow', 'torch', 'jax']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ "${{ matrix.backend }}" == "tensorflow" ]; then
          pip install "tensorflow>=2.19.0"
        elif [ "${{ matrix.backend }}" == "torch" ]; then
          pip install torch torch-geometric
        elif [ "${{ matrix.backend }}" == "jax" ]; then
          pip install "jax[cpu]"
        fi
        pip install "keras>=3.0"
        pip install -e ".[test]"

    - name: Run unit tests
      run: |
        python -m pytest tests/

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 mypy

    - name: Lint with flake8
      run: |
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Type check with mypy
      run: |
        mypy src/

  benchmark:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install torch torch-geometric
        pip install tensorflow keras>=3.0
        pip install -e ".[test]"

    - name: Run benchmarks
      run: |
        python -m tests.benchmarks.test_performance
